//1
console.log('person1 shows ticket');
console.log('person2 shows ticket');

// Using async/await
const preMovie = async () => {
    const person3PromiseToShowTicketWhenWifeArrives = new Promise((resolve) => {
        setTimeout(() => resolve('ticket'), 3000);
    });

    const getPopcorn = new Promise((resolve) => {
        setTimeout(() => resolve('popcorn'), 3000);
    });

    const addButter = new Promise((resolve) => {
        setTimeout(() => resolve('butter'), 3000);
    });

    let ticket = await person3PromiseToShowTicketWhenWifeArrives;
    console.log(`got the ${ticket}`);
    console.log(`Husband: we should go in now`);
    console.log(`Wife: "I am hungry"`);

    let popcorn = await getPopcorn;
    console.log(`Husband: here is ${popcorn}`);
    console.log(`Husband: we should go in now`);
    console.log(`Wife: "I don't like popcorn without butter!"`);

    let butter = await addButter;
    console.log(`added ${butter}`);

    console.log(`Husband: Anything else, darling?`);
    console.log(`Wife: let's go, we are going to miss the preview`);
    console.log(`Husband: thanks for the reminder *grin*`);

    return ticket;
};

preMovie()
    .then((ticket) => {
        console.log(`person4 shows ${ticket}`);

        // Creating a new promise for getColdDrinks
        const getColdDrinks = new Promise((resolve) => {
            setTimeout(() => resolve('cold drinks'), 2000);
        });

        return getColdDrinks;
    })
    .then((drink) => {
        console.log(`Husband: got ${drink}`);
        console.log(`Husband: Let's go, the movie is starting!`);
    })
    .catch((error) => {
        console.error('Error:', error);
    });

console.log('person4 shows ticket');



//2
const posts = [];

function createPost(postData) {
    return new Promise((resolve) => {
        setTimeout(() => {
            const newPost = { ...postData };
            posts.push(newPost);
            resolve(newPost);
        }, 2000);
    });
}

async function deletePost() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if (posts.length > 0) {
                const deletedPost = posts.pop();
                resolve(deletedPost);
            } else {
                reject('ERROR: ARRAY IS EMPTY');
            }
        }, 1000);
    });
}

console.log('person1 shows ticket');
console.log('person2 shows ticket');

const preMovie = async () => {
    const person3PromiseToShowTicketWhenWifeArrives = new Promise((resolve) => {
        setTimeout(() => resolve('ticket'), 3000);
    });

    const getPopcorn = new Promise((resolve) => {
        setTimeout(() => resolve('popcorn'), 3000);
    });

    const getCandy = new Promise((resolve) => {
        setTimeout(() => resolve('candy'), 3000);
    });

    const getCoke = new Promise((resolve) => {
        setTimeout(() => resolve('coke'), 3000);
    });

    let ticket = await person3PromiseToShowTicketWhenWifeArrives;

    let [popcorn, candy, coke] = await Promise.all([getPopcorn, getCandy, getCoke]);

    console.log(`got ${popcorn}, ${candy}, ${coke}`);

    return ticket;
};

preMovie()
    .then((ticket) => {
        console.log(`person4 shows ${ticket}`);
    })
    .catch((error) => {
        console.error('Error:', error);
    });

console.log('person4 shows ticket');
